{{- if and (.Values.db.enable) (eq .Values.environment "dev") }}
kind: Deployment
apiVersion: apps/v1
metadata:
  annotations:
    deployment.kubernetes.io/revision: '1'
  name: ${{values.deployment_name}}-db
  namespace: "{{ .Values.namespace.name }}"
  labels:
    template: postgresql-persistent-template
spec:
  replicas: 1
  selector:
    matchLabels:
      name: ${{values.deployment_name}}-db
  template:
    metadata:
      name: ${{values.deployment_name}}-db
      labels:
        name: ${{values.deployment_name}}-db
    spec:
      volumes:
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: ${{values.deployment_name}}-db-pvc
      containers:
        - resources: {}
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - '-c'
                - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          name: postgresql
          livenessProbe:
            tcpSocket:
              port: 5432
            initialDelaySeconds: 30
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          env:
            - name: POSTGRESQL_USER
              valueFrom:
                secretKeyRef:
                  key: database-user
                  name: ${{values.deployment_name}}-db-secret
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: ${{values.deployment_name}}-db-secret
            - name: POSTGRESQL_DATABASE
              valueFrom:
                secretKeyRef:
                  key: database-name
                  name: ${{values.deployment_name}}-db-secret
          ports:
            - containerPort: 5432
              protocol: TCP
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: postgresql-data
              mountPath: /var/lib/pgsql/data
          terminationMessagePolicy: File
          image: 'registry.redhat.io/rhscl/postgresql-10-rhel7:1-173'
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: Recreate
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
{{- end }}