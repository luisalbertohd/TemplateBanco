apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: quarkus-banco-template
  title: Artefacto de Quarkus con el stack de banco
  description: Generar un nuevo artefacto de Quarkus con el stack de banco y el proceso de TSSC
  tags:
    - banco
    - recommended
    - java
    - quarkus
    - maven
spec:
  owner: rhdh
  type: service
  parameters:
    - title: Info de la Aplicacion
      required:
        - component_id
        - java_package_name
      properties:
        component_id:
          title: Nombre
          type: string
          description: Nombre del componente ( debe ser unico )
          default: banco-quarkus-app
          ui:field: EntityNamePicker
          maxLength: 23
        group_id:
          title: Group Id
          type: string
          default: com.redhat.poc.banco
          description: Group Id de Maven
        artifact_id:
          title: Artifact Id
          type: string
          default: banco-quarkus-app
          description: Artifact Id de Maven
        java_package_name:
          title: Paquete de Java
          default: com.redhat.poc.banco
          type: string
          description: Paquete base de Java del proyecto
        description:
          title: Descripcion
          type: string
          description: Descripcion detallada de la aplicacion
          default: Servicio de banco
        enabledDB:
          title: La aplicacion usara una base de datos?
          type: boolean
          default: false
      dependencies:
        enabledDB:
          allOf:
            - if: 
                properties:
                  enabledDB:
                    const: true
              then:
                properties:
                  db_name:
                    title: DB Name
                    type: string
                    default: db
                    description: Nombre de la base de datos
                  db_user:
                    title: DB User
                    type: string
                    default: sa
                    description: Usuario para la base de datos
                  db_password:
                    title: DB Password
                    type: string
                    default: sa
                    description: Password del suario para la base de datos


    - title: Registro de contenedores para la imagen
      required:
        - image_registry
      properties:
        image_registry:
          title: Image Registry
          type: string
          enum:
            - Openshift
            - Quay
      dependencies:
        image_registry:
          oneOf:
            - properties:
                image_registry:
                  enum:
                    - Openshift
                image_host:
                  title: Nombre de host
                  type: string
                  description: Nombre de host del registro
                  default: image-registry.openshift-image-registry.svc:5000
                image_tag:
                  title: Tag de la imagen
                  default: latest
                  type: string
                  description: Tag de la imagen que se construira
            - properties:
                image_registry:
                  enum:
                    - Quay
                image_host:
                  title: Nombre de host
                  type: string
                  description: Host for storing image
                  default: quay-5264f.apps.cluster-5264f.5264f.sandbox1905.opentlc.com
                image_organization:
                  title: Organization
                  type: string
                  description: Organizacion de Quay donde se creara el repositorio para la imagen
                  default: quayadmin
                image_tag:
                  title: Tag de la imagen
                  default: latest
                  type: string
                  description: Tag de la imagen que se construira
    - title: Repositorio de codigo de la aplicacion
      required:
        - repo
      properties:
        repo:
          title: Ubicacion del repositorio
          type: object
          properties:
            host:
              title: Nombre de host
              type: string
              description: Your SCM host
              default: gitlab-gitlab.apps.cluster-5264f.5264f.sandbox1905.opentlc.com
              enum:
                - gitlab-gitlab.apps.cluster-5264f.5264f.sandbox1905.opentlc.com
            owner:
              title: Repo Owner
              type: string
              description: Grupo/Organizacion al que pertenece el repositorio
              default: development
              enum:
                - development

  steps:
    - id: template
      name: Obtener el esqueleto del repo + aplicar template
      action: fetch:template
      input:
        url: ./skeleton
        copyWithoutTemplating:
          - .github/workflows/*
        values:
          component_id: ${{ parameters.component_id }}
          description: ${{ parameters.description }}
          namespace: ${{ parameters.component_id }}-dev
          group_id: ${{ parameters.group_id }}
          artifact_id: ${{ parameters.artifact_id }}
          java_package_name: ${{ parameters.java_package_name }}
          owner: ${{ user.entity.metadata.name }}
          cluster: .apps.cluster-5264f.5264f.sandbox1905.opentlc.com
          host: ${{ parameters.repo.host }}
          destination: ${{ parameters.repo.owner }}/${{ parameters.component_id }}
          quay_destination: ${{ parameters.image_organization}}/${{ parameters.component_id }}
          port: 8080
          enabledDB: ${{ parameters.enabledDB }}
          db_name: ${{ parameters.db_name }}
          db_user: ${{ parameters.db_user }}
          db_password: ${{ parameters.db_password }}

    - id: publish
      name: Publicar el nuevo artefacto de codigo
      action: publish:gitlab
      input:
        repoUrl: "${{ parameters.repo.host }}?owner=${{ parameters.repo.owner }}&repo=${{parameters.component_id}}"
        repoVisibility: public

    - id: register
      name: Registrar componente con el catalogo interno
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"

    - id: template-gitops-deployment
      name: Generar recursos para CI/CD
      action: fetch:template
      input:
        url: ./manifests
        copyWithoutTemplating: []
        values:
          component_id: ${{ parameters.component_id }}
          description: ${{ parameters.description }}
          destination: https://${{ parameters.repo.host }}/${{ parameters.repo.owner }}/${{parameters.component_id}}-gitops.git
          source_repository: https://${{ parameters.repo.host }}/${{ parameters.repo.owner }}/${{parameters.component_id}}.git
          repository_name: ${{parameters.component_id}}
          git_owner: ${{ parameters.repo.owner }}
          cluster: .apps.cluster-5264f.5264f.sandbox1905.opentlc.com
          namespace: ${{ parameters.component_id }}-dev
          image_registry: ${{ parameters.image_registry }}
          image_host: ${{ parameters.image_host }}
          image_organization: ${{ parameters.image_organization }}
          image_name: ${{ parameters.component_id }}
          image_tag: ${{ parameters.image_tag }}
          port: 8080
          repository_host: ${{ parameters.repo.host }}
          deployment_name: ${{ parameters.component_id }}
          user: ${{ user.entity.metadata.name }}
          enabledDB: ${{ parameters.enabledDB }}
          db_name: ${{ parameters.db_name }}
          db_user: ${{ parameters.db_user }}
          db_password: ${{ parameters.db_password }}
        targetPath: ./tenant-gitops

    - id: publish-gitops
      name: Publicar los recursos de Gitops al repositorio de codigo
      action: publish:gitlab
      input:
        repoUrl: "${{ parameters.repo.host }}?owner=${{ parameters.repo.owner }}&repo=${{parameters.component_id}}-gitops"
        title: gitops resources for ${{ parameters.component_id }}
        description: gitops resources for ${{ parameters.component_id }}
        sourcePath: ./tenant-gitops
        repoVisibility: public

    - id: create-argocd-resources
      name: Generar los recursos en ArgoCD
      action: argocd:create-resources
      input:
        appName: ${{ parameters.component_id }}-bootstrap
        argoInstance: main
        namespace: janus-argocd
        repoUrl: https://${{ parameters.repo.host }}/${{ parameters.repo.owner }}/${{ parameters.component_id }}-gitops.git
        path: 'argocd/'

  output:
    links:
      - title: Source Code Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open Component in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
